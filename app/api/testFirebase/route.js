// üìÇ ‡πÑ‡∏ü‡∏•‡πå: testFirebase.js
// ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: mgg/app/api/testFirebase/route.js
// ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà: ‡∏™‡∏£‡πâ‡∏≤‡∏á API Endpoint ‡πÉ‡∏ô Next.js ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore
// ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firebase ‡πÅ‡∏•‡∏∞ Firestore ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö API üéØ

import { NextResponse } from "next/server";
// ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
//     ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ NextResponse ‡∏à‡∏≤‡∏Å next/server
//     ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Response ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
// ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
//     NextResponse ‡πÄ‡∏õ‡πá‡∏ô API ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö App Router ‡∏Ç‡∏≠‡∏á Next.js
//     ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á JSON, Headers ‡πÅ‡∏•‡∏∞ Status Code
import { db } from "../../../lib/firebaseConfig";  // ‡πÉ‡∏ä‡πâ‡∏û‡∏≤‡∏ò‡∏ï‡∏£‡∏á‡πÅ‡∏ó‡∏ô @/
// ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
//     ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ db (Firestore Instance) ‡∏à‡∏≤‡∏Å firebaseConfig.js
//     ‡πÉ‡∏ä‡πâ‡∏û‡∏≤‡∏ò‡∏ï‡∏£‡∏á (../../../) ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ @/lib/firebaseConfig
// ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
//     ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Module not found ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Path Alias (@/) ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
//     ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ä‡πâ @/lib/firebaseConfig ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ Path Alias ‡πÑ‡∏î‡πâ
import { collection, getDocs } from "firebase/firestore";
// ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
//     ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ collection ‡πÅ‡∏•‡∏∞ getDocs ‡∏à‡∏≤‡∏Å Firebase SDK
//     collection: ‡∏™‡∏£‡πâ‡∏≤‡∏á Reference ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Collection ‡πÉ‡∏ô Firestore
//     getDocs: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å Document ‡πÉ‡∏ô Collection
// ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
//     ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Collection test ‡πÉ‡∏ô Firestore
//     ‡πÉ‡∏ä‡πâ getDocs ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß

export async function GET() {
  //   ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
  //     ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô GET ‡πÅ‡∏ö‡∏ö async ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö Request GET
  //     ‡πÉ‡∏ä‡πâ export ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Next.js ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô API Endpoint
  // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
  //     ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á App Router ‡πÉ‡∏ô Next.js ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ export ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ
  //     async ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö Asynchronous ‡∏à‡∏≤‡∏Å Firestore
  try {
    const querySnapshot = await getDocs(collection(db, "test"));
    //     ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
    //     await getDocs(): ‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Collection test ‡πÉ‡∏ô Firestore ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    //     querySnapshot: ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Firestore ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å Document
    // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
    //     ‡πÉ‡∏ä‡πâ await ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏õ‡∏ó‡∏≥‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    //     collection(db, "test"): ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Collection ‡∏ä‡∏∑‡πà‡∏≠ test ‡πÉ‡∏ô Firestore
    const data = querySnapshot.docs.map((doc) => ({
      id: doc.id,
      ...doc.data(),
    }));
    // ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
    //     querySnapshot.docs: ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á Document ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    //     .map((doc) => {...}): ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß‡πÉ‡∏ô Collection
    //     doc.id: ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    //     doc.data(): ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
    // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
    //     ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á Object ‡∏ó‡∏µ‡πà‡∏°‡∏µ id ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
    //     ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ Frontend
    return NextResponse.json(data);
    // ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
    //     ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• data ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà Client
    //     ‡πÉ‡∏ä‡πâ NextResponse.json() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Response ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô JSON
    // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
    //     ‡∏ó‡∏≥‡πÉ‡∏´‡πâ Frontend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    //     ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö CORS ‡πÅ‡∏•‡∏∞ Status Code ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  } catch (error) {
    console.error("Error fetching data:", error);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
  // ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
  //     catch (error): ‡∏î‡∏±‡∏Å Error ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firestore
  //     console.error(): ‡πÅ‡∏™‡∏î‡∏á Error ‡πÉ‡∏ô Terminal ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Debug
  //     NextResponse.json(): ‡∏™‡πà‡∏á Error Message ‡∏û‡∏£‡πâ‡∏≠‡∏° Status Code 500 (Internal Server Error)
  // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:
  //     ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏•‡πà‡∏°‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Firestore
  //     ‡πÉ‡∏´‡πâ Frontend ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏î Error ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error ‡πÑ‡∏î‡πâ
}
