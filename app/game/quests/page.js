"use client";
import { useEffect, useState } from "react";
import { db } from "@/lib/firebaseConfig";
import { collection, getDocs, updateDoc, doc, increment } from "firebase/firestore";
import useAuth from "@/hooks/useAuth";

const QuestsPage = () => {
  const [quests, setQuests] = useState([]);
  const { user, loading } = useAuth();

  useEffect(() => {
    if (user) {
      const fetchQuests = async () => {
        const querySnapshot = await getDocs(collection(db, "quests"));
        const data = querySnapshot.docs.map((doc) => ({
          id: doc.id,
          ...doc.data(),
        }));
        setQuests(data);
      };
      fetchQuests();
    }
  }, [user]);

  const claimReward = async (quest) => {
    try {
      const questRef = doc(db, "quests", quest.id);

      if (!quest.completed) {
        const userRef = doc(db, "users", user.uid);
        await updateDoc(userRef, {
          coins: increment(quest.reward),
        });

        await updateDoc(questRef, {
          completed: true,
        });

        alert(`‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! +${quest.reward} Coins`);
      } else {
        alert("‡∏Ñ‡∏∏‡∏ì‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!");
      }
    } catch (error) {
      console.error("Error claiming reward:", error);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•");
    }
  };

  if (loading) return <p>Loading...</p>;

  return (
    <div className="min-h-screen bg-yellow-100 p-6">
      <h1 className="text-3xl mb-6 text-center">Quests</h1>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {quests.map((quest) => (
          <div
            key={quest.id}
            className={`bg-white shadow-md rounded-lg p-4 ${quest.completed ? "opacity-50" : ""}`}
          >
            <h3 className="text-xl mb-2">{quest.description}</h3>
            <p className="mb-2">‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: {quest.reward} Coins</p>
            <button
              onClick={() => claimReward(quest)}
              className={`px-4 py-2 ${
                quest.completed ? "bg-gray-400" : "bg-green-500"
              } text-white rounded`}
              disabled={quest.completed}
            >
              {quest.completed ? "‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß" : "‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•"}
            </button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default QuestsPage;



// üõ†Ô∏è ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏Ñ‡πâ‡∏î: ‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à (/game/quests)

//     fetchQuests: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏à‡∏≤‡∏Å Firestore
//         ‡πÉ‡∏ä‡πâ getDocs ‡∏î‡∏∂‡∏á quests Collection
//         ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô State quests ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à

//     claimReward: ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
//         ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤ completed: false ‡∏Å‡πà‡∏≠‡∏ô:
//             ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç (coins) ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (+reward)
//             ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï completed: true ‡πÉ‡∏ô quests
//             ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤ "‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! +[‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] Coins"
//         ‡∏ñ‡πâ‡∏≤ completed: true:
//             ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤ "‡∏Ñ‡∏∏‡∏ì‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!"

//     ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
//         ‡∏ñ‡πâ‡∏≤‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß (completed: true):
//             ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ (bg-gray-400) ‡πÅ‡∏•‡∏∞ disabled
//             ‡πÅ‡∏™‡∏î‡∏á "‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß"
//         ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á (completed: false):
//             ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß (bg-green-500)
//             ‡πÅ‡∏™‡∏î‡∏á "‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•"